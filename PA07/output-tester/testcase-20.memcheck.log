==15341== Memcheck, a memory error detector
==15341== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==15341== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==15341== Command: ./a.out images/corrupt-testcases/05-big-width-height.ee264 student-out-19_-
==15341== Parent PID: 15339
==15341== 
--15341-- 
--15341-- Valgrind options:
--15341--    --tool=memcheck
--15341--    --leak-check=full
--15341--    --verbose
--15341--    --log-file=memcheck-19.log
--15341-- Contents of /proc/version:
--15341--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--15341-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--15341-- Page sizes: currently 4096, max supported 4096
--15341-- Valgrind library directory: /usr/lib64/valgrind
--15341-- Reading syms from /tmp/.Rlk1Mr/a.out
--15341-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--15341--    object doesn't have a dynamic symbol table
--15341-- Reading syms from /lib64/ld-2.12.so
--15341--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--15341--   .. build-id is valid
--15341-- Scheduler: using generic scheduler lock implementation.
--15341-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==15341== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-15341-by-pkale-on-ecegrid-thin1.ecn.purdue.edu
==15341== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-15341-by-pkale-on-ecegrid-thin1.ecn.purdue.edu
==15341== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-15341-by-pkale-on-ecegrid-thin1.ecn.purdue.edu
==15341== 
==15341== TO CONTROL THIS PROCESS USING vgdb (which you probably
==15341== don't want to do, unless you know exactly what you're doing,
==15341== or are doing some strange experiment):
==15341==   /usr/lib64/valgrind/../../bin/vgdb --pid=15341 ...command...
==15341== 
==15341== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==15341==   /path/to/gdb ./a.out
==15341== and then give GDB the following command
==15341==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=15341
==15341== --pid is optional if only one valgrind process is running
==15341== 
--15341-- REDIR: 0x35ff417610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--15341-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--15341-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--15341-- REDIR: 0x35ff417480 (index) redirected to 0x4a07c30 (index)
--15341-- REDIR: 0x35ff417500 (strcmp) redirected to 0x4a08570 (strcmp)
--15341-- Reading syms from /lib64/libc-2.12.so
--15341--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--15341--   .. build-id is valid
--15341-- REDIR: 0x35ff884cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--15341-- REDIR: 0x35ff886f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--15341-- REDIR: 0x35ff882c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--15341-- REDIR: 0x35ff87f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--15341-- REDIR: 0x35ff928420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--15341-- REDIR: 0x35ff881120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--15341-- REDIR: 0x35ff9336f0 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--15341-- REDIR: 0x35ff88aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--15341-- REDIR: 0x35ff884500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--15341-- REDIR: 0x35ff87b520 (free) redirected to 0x4a063a9 (free)
--15341-- REDIR: 0x35ff87a640 (malloc) redirected to 0x4a069ac (malloc)
--15341-- REDIR: 0x35ff889670 (memcpy) redirected to 0x4a08b60 (memcpy)
==15341== Conditional jump or move depends on uninitialised value(s)
==15341==    at 0x4A063E3: free (vg_replace_malloc.c:446)
==15341==    by 0x400A15: Image_load (answer07.c:52)
==15341==    by 0x4018A0: main (<stdin>:61)
==15341== 
==15341== Invalid free() / delete / delete[] / realloc()
==15341==    at 0x4A06430: free (vg_replace_malloc.c:446)
==15341==    by 0x400A15: Image_load (answer07.c:52)
==15341==    by 0x4018A0: main (<stdin>:61)
==15341==  Address 0x7ff0006bf is on thread 1's stack
==15341== 
==15341== 
==15341== HEAP SUMMARY:
==15341==     in use at exit: 568 bytes in 1 blocks
==15341==   total heap usage: 1 allocs, 1 frees, 568 bytes allocated
==15341== 
==15341== Searching for pointers to 1 not-freed blocks
==15341== Checked 69,072 bytes
==15341== 
==15341== LEAK SUMMARY:
==15341==    definitely lost: 0 bytes in 0 blocks
==15341==    indirectly lost: 0 bytes in 0 blocks
==15341==      possibly lost: 0 bytes in 0 blocks
==15341==    still reachable: 568 bytes in 1 blocks
==15341==         suppressed: 0 bytes in 0 blocks
==15341== Reachable blocks (those to which a pointer was found) are not shown.
==15341== To see them, rerun with: --leak-check=full --show-reachable=yes
==15341== 
==15341== Use --track-origins=yes to see where uninitialised values come from
==15341== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==15341== 
==15341== 1 errors in context 1 of 2:
==15341== Invalid free() / delete / delete[] / realloc()
==15341==    at 0x4A06430: free (vg_replace_malloc.c:446)
==15341==    by 0x400A15: Image_load (answer07.c:52)
==15341==    by 0x4018A0: main (<stdin>:61)
==15341==  Address 0x7ff0006bf is on thread 1's stack
==15341== 
==15341== 
==15341== 1 errors in context 2 of 2:
==15341== Conditional jump or move depends on uninitialised value(s)
==15341==    at 0x4A063E3: free (vg_replace_malloc.c:446)
==15341==    by 0x400A15: Image_load (answer07.c:52)
==15341==    by 0x4018A0: main (<stdin>:61)
==15341== 
--15341-- 
--15341-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--15341-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==15341== 
==15341== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
