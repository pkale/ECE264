==9331== Memcheck, a memory error detector
==9331== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==9331== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==9331== Command: ./a.out images/corrupt-testcases/04-height0.ee264 student-out-18_-
==9331== Parent PID: 9329
==9331== 
--9331-- 
--9331-- Valgrind options:
--9331--    --tool=memcheck
--9331--    --leak-check=full
--9331--    --verbose
--9331--    --log-file=memcheck-18.log
--9331-- Contents of /proc/version:
--9331--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--9331-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--9331-- Page sizes: currently 4096, max supported 4096
--9331-- Valgrind library directory: /usr/lib64/valgrind
--9331-- Reading syms from /tmp/.Rlk1Mr/a.out
--9331-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--9331--    object doesn't have a dynamic symbol table
--9331-- Reading syms from /lib64/ld-2.12.so
--9331--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--9331--   .. build-id is valid
--9331-- Scheduler: using generic scheduler lock implementation.
--9331-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==9331== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-9331-by-pkale-on-ecegrid-thin1.ecn.purdue.edu
==9331== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-9331-by-pkale-on-ecegrid-thin1.ecn.purdue.edu
==9331== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-9331-by-pkale-on-ecegrid-thin1.ecn.purdue.edu
==9331== 
==9331== TO CONTROL THIS PROCESS USING vgdb (which you probably
==9331== don't want to do, unless you know exactly what you're doing,
==9331== or are doing some strange experiment):
==9331==   /usr/lib64/valgrind/../../bin/vgdb --pid=9331 ...command...
==9331== 
==9331== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==9331==   /path/to/gdb ./a.out
==9331== and then give GDB the following command
==9331==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=9331
==9331== --pid is optional if only one valgrind process is running
==9331== 
--9331-- REDIR: 0x35ff417610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--9331-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--9331-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--9331-- REDIR: 0x35ff417480 (index) redirected to 0x4a07c30 (index)
--9331-- REDIR: 0x35ff417500 (strcmp) redirected to 0x4a08570 (strcmp)
--9331-- Reading syms from /lib64/libc-2.12.so
--9331--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--9331--   .. build-id is valid
--9331-- REDIR: 0x35ff884cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9331-- REDIR: 0x35ff886f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9331-- REDIR: 0x35ff882c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--9331-- REDIR: 0x35ff87f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9331-- REDIR: 0x35ff928420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--9331-- REDIR: 0x35ff881120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9331-- REDIR: 0x35ff9336f0 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--9331-- REDIR: 0x35ff88aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--9331-- REDIR: 0x35ff884500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--9331-- REDIR: 0x35ff87b520 (free) redirected to 0x4a063a9 (free)
--9331-- REDIR: 0x35ff87a640 (malloc) redirected to 0x4a069ac (malloc)
--9331-- REDIR: 0x35ff889670 (memcpy) redirected to 0x4a08b60 (memcpy)
==9331== Conditional jump or move depends on uninitialised value(s)
==9331==    at 0x4A063E3: free (vg_replace_malloc.c:446)
==9331==    by 0x400A15: Image_load (answer07.c:52)
==9331==    by 0x4018A0: main (<stdin>:61)
==9331== 
==9331== Invalid free() / delete / delete[] / realloc()
==9331==    at 0x4A06430: free (vg_replace_malloc.c:446)
==9331==    by 0x400A15: Image_load (answer07.c:52)
==9331==    by 0x4018A0: main (<stdin>:61)
==9331==  Address 0x7ff0006cb is on thread 1's stack
==9331== 
==9331== 
==9331== HEAP SUMMARY:
==9331==     in use at exit: 568 bytes in 1 blocks
==9331==   total heap usage: 1 allocs, 1 frees, 568 bytes allocated
==9331== 
==9331== Searching for pointers to 1 not-freed blocks
==9331== Checked 69,072 bytes
==9331== 
==9331== LEAK SUMMARY:
==9331==    definitely lost: 0 bytes in 0 blocks
==9331==    indirectly lost: 0 bytes in 0 blocks
==9331==      possibly lost: 0 bytes in 0 blocks
==9331==    still reachable: 568 bytes in 1 blocks
==9331==         suppressed: 0 bytes in 0 blocks
==9331== Reachable blocks (those to which a pointer was found) are not shown.
==9331== To see them, rerun with: --leak-check=full --show-reachable=yes
==9331== 
==9331== Use --track-origins=yes to see where uninitialised values come from
==9331== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==9331== 
==9331== 1 errors in context 1 of 2:
==9331== Invalid free() / delete / delete[] / realloc()
==9331==    at 0x4A06430: free (vg_replace_malloc.c:446)
==9331==    by 0x400A15: Image_load (answer07.c:52)
==9331==    by 0x4018A0: main (<stdin>:61)
==9331==  Address 0x7ff0006cb is on thread 1's stack
==9331== 
==9331== 
==9331== 1 errors in context 2 of 2:
==9331== Conditional jump or move depends on uninitialised value(s)
==9331==    at 0x4A063E3: free (vg_replace_malloc.c:446)
==9331==    by 0x400A15: Image_load (answer07.c:52)
==9331==    by 0x4018A0: main (<stdin>:61)
==9331== 
--9331-- 
--9331-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--9331-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==9331== 
==9331== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
